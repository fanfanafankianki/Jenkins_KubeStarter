Description: 'AWS CloudFormation Template: Create KubeMaster EC2 with EBS storage'


Resources:
  MyInstanceProfile:
    Type: AWS::IAM::InstanceProfileMaster
    Properties:
      Roles:
        - KubernetesIngressRole

  MyKubeMasterInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.medium
      ImageId: ami-0c71414824378efab
      IamInstanceProfile: 
        Ref: MyInstanceProfileMaster      
      Tags:
        - Key: "Name"
          Value: "MyKubeMaster"      
      BlockDeviceMappings:
        - DeviceName: "/dev/sda1"
          Ebs:  
            VolumeSize: 10   
      KeyName: "KuberMaster"
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          DeleteOnTermination: true
          SubnetId: !ImportValue MyPublicSubnet1Id
          GroupSet: 
            - !ImportValue KubernetesSecurityGroup
      AvailabilityZone: "eu-north-1a"
      UserData:
        Fn::Base64: 
          !Sub |
            #!/bin/bash
            sudo -u ubuntu sudo kubeadm init --cri-socket unix:///var/run/cri-dockerd.sock

            sudo -u ubuntu sudo systemctl restart kubelet
            sudo -u ubuntu sudo systemctl enable kubelet

            sudo -u ubuntu mkdir -p /home/ubuntu/.kube
            sudo -u ubuntu sudo cp -i /etc/kubernetes/admin.conf /home/ubuntu/.kube/config
            sudo -u ubuntu sudo chown ubuntu /home/ubuntu/.kube/config
            sudo -u ubuntu sudo chmod 777 /home/ubuntu/.kube/config

            sudo -u ubuntu kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.27.2/manifests/calico.yaml
            sudo -u ubuntu kubeadm token create --print-join-command > /home/ubuntu/join.txt
            sudo -u ubuntu cd ~ | git clone https://github.com/fanfanafankianki/KubeServices
            sudo -u ubuntu cd KubeServices/
            sudo -u ubuntu git checkout HelmPromGraf
            sudo -u ubuntu cd Kubernetes_Yamls/
            sudo -u ubuntu kubectl apply -f .
            sudo -u ubuntu kubectl apply -f NFS_configuration/.
            sudo -u ubuntu curl -s https://fluxcd.io/install.sh | sudo bash
            sudo -u ubuntu export GITHUB_TOKEN='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'
            sudo -u ubuntu kubectl rollout restart deployment/coredns -n kube-system
            sudo -u ubuntu sleep 10 && flux bootstrap github   --owner=fanfanafankianki   --repository=KubeServices   --branch=HelmPromGraf   --path=./Flux_configuration   --personal


            sudo -u ubuntu helm repo add bitnami https://charts.bitnami.com/bitnami
            sudo -u ubuntu helm repo add eks https://aws.github.io/eks-charts
            sudo -u ubuntu helm repo update
            sudo -u ubuntu helm upgrade --install aws-load-balancer-controller eks/aws-load-balancer-controller \
                --namespace kube-system \
                --set clusterName=kubernetes \
                --set serviceAccount.create=true \
                --set serviceAccount.annotations."eks\.amazonaws\.com/role-arn"=arn:aws:iam::975050111074:role/KubernetesIngressRole

            sudo -u ubuntu kubectl rollout restart deployment/coredns -n kube-system
            sudo -u ubuntu helm repo add bitnami https://charts.bitnami.com/bitnami
            sudo -u ubuntu helm repo update



