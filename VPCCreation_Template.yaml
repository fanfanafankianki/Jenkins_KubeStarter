Description: 'AWS CloudFormation Template: Create VPC for Kubernetes Project'
  
Resources:
  MyVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.0.0.0/16"
      EnableDnsHostnames: true
      Tags:
        - Key: "Name"
          Value: "Kubernetes_Project_VPC"

  MyInternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: "Name"
          Value: "MyInternetGateway"

  MyVPCGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyInternetGateway

  MyPublicSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: "10.0.1.0/24"
      AvailabilityZone: "eu-north-1a"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value: "MyPublicSubnet1"

  MyPublicSubnet2:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: "10.0.2.0/24"
      AvailabilityZone: "eu-north-1b"
      MapPublicIpOnLaunch: true
      Tags:
        - Key: "Name"
          Value: "MyPublicSubnet2"

  MyPrivateSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: "10.0.3.0/24"
      AvailabilityZone: "eu-north-1a"
      Tags:
        - Key: "Name"
          Value: "MyPrivateSubnet1"

  MyPrivateSubnet2:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: "10.0.4.0/24"
      AvailabilityZone: "eu-north-1b"
      Tags:
        - Key: "Name"
          Value: "MyPrivateSubnet2"

  MyPublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: "Name"
          Value: "MyPublicRouteTable"

  MyPrivateRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: "Name"
          Value: "MyPrivateRouteTable"

  MyPublicRoute:
    Type: "AWS::EC2::Route"
    DependsOn: MyVPCGatewayAttachment
    Properties:
      RouteTableId: !Ref MyPublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref MyInternetGateway

  MyPublicSubnetRouteTableAssociation1:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref MyPublicSubnet1
      RouteTableId: !Ref MyPublicRouteTable

  MyPrivateSubnetRouteTableAssociation1:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref MyPrivateSubnet1
      RouteTableId: !Ref MyPrivateRouteTable
      
  MyPublicSubnetRouteTableAssociation2:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref MyPublicSubnet2
      RouteTableId: !Ref MyPublicRouteTable

  MyPrivateSubnetRouteTableAssociation2:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      SubnetId: !Ref MyPrivateSubnet2
      RouteTableId: !Ref MyPrivateRouteTable

  KubernetesSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Kubernetes_Security_Group
      GroupDescription: 'SecurityGroup for Kubernetes'
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
          Description: 'SSH access'
        - IpProtocol: tcp
          FromPort: 53
          ToPort: 53
          CidrIp: 0.0.0.0/0
          Description: 'DNS access'
        - IpProtocol: tcp
          FromPort: 6443
          ToPort: 6443
          CidrIp: 0.0.0.0/0
          Description: 'KupeAPI access'
        - IpProtocol: tcp
          FromPort: 2049
          ToPort: 2049
          CidrIp: 0.0.0.0/0
          Description: 'NFS access'    
        - IpProtocol: tcp
          FromPort: 10250
          ToPort: 10250
          CidrIp: 0.0.0.0/0
          Description: 'Kubelet access'
        - IpProtocol: tcp
          FromPort: 10256
          ToPort: 10256
          CidrIp: 0.0.0.0/0
          Description: 'KubeProxy access'               
        - IpProtocol: tcp
          FromPort: 17900
          ToPort: 17999
          CidrIp: 0.0.0.0/0
          Description: 'Calico access'  
        - IpProtocol: tcp
          FromPort: 30000
          ToPort: 35000
          CidrIp: 0.0.0.0/0
          Description: 'Kubernetes Service access'  
          
Outputs:
  MyVPCId:
    Value: !Ref MyVPC
    Description: "The ID of the VPC created by this CloudFormation stack."
    Export:
      Name: MyVPCId
      
  MyPublicSubnet1Id:
    Value: !Ref MyPublicSubnet1
    Description: "The ID of the public subnet 1."
    Export:
      Name: MyPublicSubnet1Id

  MyPublicSubnet2Id:
    Value: !Ref MyPublicSubnet2
    Description: "The ID of the public subnet 2."
    Export:
      Name: MyPublicSubnet2Id

  MyPrivateSubnet1Id:
    Value: !Ref MyPrivateSubnet1
    Description: "The ID of the private subnet 1."
    Export:
      Name: MyPrivateSubnet1Id

  MyPrivateSubnet2Id:
    Value: !Ref MyPrivateSubnet2
    Description: "The ID of the private subnet 2."
    Export:
      Name: MyPrivateSubnet2Id
      
  KubernetesSecurityGroup:
    Value: !Ref KubernetesSecurityGroup
    Description: "The ID of the Kubernetes SecurityGroup."
    Export:
      Name: KubernetesSecurityGroup